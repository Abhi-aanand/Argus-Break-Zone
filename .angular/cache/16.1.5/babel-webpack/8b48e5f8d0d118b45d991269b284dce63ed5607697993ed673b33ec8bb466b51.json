{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"../snackbar.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/toolbar\";\nimport * as i11 from \"@angular/flex-layout/flex\";\nfunction ForgotPasswordComponent_form_9_mat_error_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_form_9_mat_error_6_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_form_9_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ForgotPasswordComponent_form_9_mat_error_6_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵtemplate(2, ForgotPasswordComponent_form_9_mat_error_6_span_2_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.forgotPasswordForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.forgotPasswordForm.controls.email.errors.pattern);\n  }\n}\nfunction ForgotPasswordComponent_form_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 10)(1, \"div\", 11)(2, \"mat-form-field\", 12)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 13);\n    i0.ɵɵtemplate(6, ForgotPasswordComponent_form_9_mat_error_6_Template, 3, 2, \"mat-error\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.forgotPasswordForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.forgotPasswordForm.controls.email.touched && ctx_r0.forgotPasswordForm.controls.email.invalid);\n  }\n}\nfunction ForgotPasswordComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ForgotPasswordComponent_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.handleSubmit());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" Send Password \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.forgotPasswordForm.valid && ctx_r1.forgotPasswordForm.dirty));\n  }\n}\nfunction ForgotPasswordComponent_h3_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \" Email is Send Successfully \");\n    i0.ɵɵelementEnd();\n  }\n}\n//import { NgxUiLoaderService } from 'ngx-ui-loader';\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(formBulider, userService, dialogRef, snackbarService) {\n      this.formBulider = formBulider;\n      this.userService = userService;\n      this.dialogRef = dialogRef;\n      this.snackbarService = snackbarService;\n      this.forgotPasswordForm = FormGroup;\n      this.registerSucess = false;\n      this.isButtonVisible = true;\n    }\n    ngOnInit() {\n      this.forgotPasswordForm = this.formBulider.group({});\n      email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]];\n    }\n    handleSubmit() {\n      var formData = this.forgotPasswordForm.value;\n      var data = {\n        email: formData.email\n      };\n      this.userService.forgotPassword(data).subscribe(response => {\n        //this.ngxService.stop();\n        this.dialogRef.close();\n        this.responseMessage = response?.message;\n        this.snackbarService.openSnackBar(this.responseMessage, \"\");\n      }, error => {\n        //this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n      this.registerSucess = true;\n      this.isButtonVisible = false;\n    }\n  }\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.SnackbarService));\n  };\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[\"color\", \"primary\"], [\"fxlayout\", \"row\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", \"mat-icon-close\", \"\", 1, \"mat-dialog-close\"], [1, \"mat-typography\"], [3, \"formGroup\", 4, \"ngIf\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\"], [4, \"ngIf\"], [3, \"formGroup\"], [\"fxflex\", \"\", \"fxLayout\", \"column\"], [\"apperence\", \"standard\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\");\n        i0.ɵɵtext(3, \"Forgot Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"span\", 2);\n        i0.ɵɵelementStart(5, \"button\", 3)(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"cancel\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(8, \"mat-dialog-content\", 4);\n        i0.ɵɵtemplate(9, ForgotPasswordComponent_form_9_Template, 7, 2, \"form\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-dialog-actions\", 6);\n        i0.ɵɵtemplate(11, ForgotPasswordComponent_button_11_Template, 4, 1, \"button\", 7);\n        i0.ɵɵelementStart(12, \"button\", 8)(13, \"mat-icon\");\n        i0.ɵɵtext(14, \"cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \" Close \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, ForgotPasswordComponent_h3_16_Template, 2, 0, \"h3\", 9);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", !ctx.registerSucess);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isButtonVisible);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerSucess);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i6.MatButton, i6.MatIconButton, i3.MatDialogClose, i3.MatDialogContent, i3.MatDialogActions, i7.MatFormField, i7.MatLabel, i7.MatError, i8.MatIcon, i9.MatInput, i10.MatToolbar, i10.MatToolbarRow, i11.DefaultLayoutDirective, i11.DefaultFlexDirective],\n    styles: [\".mat-toolbar[_ngcontent-%COMP%]{margin:-24px -24px 10px;width:auto}mat-form-field[_ngcontent-%COMP%]{padding:5px}mat-hint[_ngcontent-%COMP%]{color:red}\"]\n  });\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}