{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './shared/material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SharedModule } from './shared/shared.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { TokenInterceptorInterceptor } from './services/token-interceptor.interceptor';\nimport * as i0 from \"@angular/core\";\n//import { NgxUiLoaderConfig, NgxUiLoaderModule , SPINNER} from 'ngx-ui-loader';\n//import { NgxUiLoaderConfig , SPINNER} from 'ngx-ui-loader';\n//import { NgxUiLoaderModule } from 'ngx-ui-loader';\n/*\nconst ngxUiLoaderConfig: NgxUiLoaderConfig={\n  text:\"Loading...\",\n  textColor:\"#FFFFFF\",\n  textPosition: \"center-center\",\n  fgsColor: \"#7b1fa2\",\n  fgsType:SPINNER.doubleBounce,\n  fgsSize:100,\n  hasProgressBar:false\n\n}\n*/\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [HttpClientModule, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorInterceptor,\n      multi: true\n    }],\n    imports: [BrowserModule, AppRoutingModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, MaterialModule, FlexLayoutModule, SharedModule, HttpClientModule, BrowserModule, MatToolbarModule, FormsModule, MatButtonModule, MatIconModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}