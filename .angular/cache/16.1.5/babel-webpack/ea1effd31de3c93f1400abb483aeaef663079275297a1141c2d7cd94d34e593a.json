{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { saveAs } from 'file-saver';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ConfirmationComponent } from '../dialog/view-bill-products/confirmation/confirmation.component';\nimport { ViewBillProductsComponent } from '../dialog/view-bill-products/view-bill-products.component';\nexport let ViewBillComponent = class ViewBillComponent {\n  constructor(billservice, dialog, SnackbarService, router) {\n    this.billservice = billservice;\n    this.dialog = dialog;\n    this.SnackbarService = SnackbarService;\n    this.router = router;\n    this.displayedColumns = ['name', 'email', 'contactNumber', 'paymentMethod', 'total', 'view'];\n  }\n  ngOnInit() {\n    this.tableData();\n  }\n  tableData() {\n    this.billservice.getBills().subscribe(response => {\n      this.dataSource = new MatTableDataSource(response);\n    }, error => {\n      console.log(error.error?.message);\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.SnackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  handleViewAction(values) {\n    const dialogConfog = new MatDialogConfig();\n    dialogConfog.data = {\n      data: values\n    };\n    dialogConfog.width = \"100%\";\n    const dialogRef = this.dialog.open(ViewBillProductsComponent, dialogConfog);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n  }\n  handleDeleteAction(values) {\n    const dialogConfog = new MatDialogConfig();\n    dialogConfog.data = {\n      message: 'delete ' + values.name + ' bill',\n      confirmation: true\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfog);\n    const sub = dialogRef.componentInstance.onEmistStatusChange.subscribe(response => {\n      this.deleteBill(values.id);\n      dialogRef.close();\n    });\n  }\n  deleteBill(id) {\n    this.billservice.delete(id).subscribe(response => {\n      this.tableData();\n      this.responseMessage = response?.message;\n      this.SnackbarService.openSnackBar(this.responseMessage, \"success\");\n    }, error => {\n      console.log(error.error?.message);\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.SnackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  downloadReportAction(values) {\n    var data = {\n      name: values.name,\n      email: values.email,\n      uuid: values.uuid,\n      contactNumber: values.contactNumber,\n      paymentMethod: values.paymentMethod,\n      totalAmount: values.total.toString(),\n      productDetails: values.productDetails\n    };\n    this.downloadFile(values.uuid, data);\n  }\n  downloadFile(fileName, data) {\n    this.billservice.getPdf(data).subscribe(response => {\n      saveAs(response, fileName + '.pdf');\n    });\n  }\n};\nViewBillComponent = __decorate([Component({\n  selector: 'app-view-bill',\n  templateUrl: './view-bill.component.html',\n  styleUrls: ['./view-bill.component.scss']\n})], ViewBillComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}