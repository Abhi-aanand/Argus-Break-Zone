{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nexport let ProductComponent = class ProductComponent {\n  constructor(dialogData, formBulider, productService, dialogRef, snackbarService, categoryService) {\n    this.dialogData = dialogData;\n    this.formBulider = formBulider;\n    this.productService = productService;\n    this.dialogRef = dialogRef;\n    this.snackbarService = snackbarService;\n    this.categoryService = categoryService;\n    this.onAddProduct = new EventEmitter();\n    this.onEditProduct = new EventEmitter();\n    this.productForm = FormGroup;\n    this.dialogAction = \"Add\";\n    this.action = \"Add\";\n    this.categorys = [];\n  }\n  ngOnInit() {\n    this.productForm = this.formBulider.group({\n      name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n      categoryId: [null, Validators.required],\n      price: [null, Validators.required],\n      description: [null, Validators.required]\n    });\n    if (this.dialogData.action === 'Edit') {\n      this.dialogAction = \"Edit\";\n      this.action = \"Update\";\n      this.productForm.patchValue(this.dialogData.data);\n    }\n    this.getCategorys();\n  }\n  getCategorys() {\n    this.categoryService.getCategorys().subscribe(response => {\n      this.categorys = response;\n    }, error => {\n      console.error(error);\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  handleSubmit() {\n    if (this.dialogAction === \"Edit\") {\n      this.edit();\n    } else {\n      this.add();\n    }\n  }\n  add() {\n    var formData = this.productForm.value;\n    var data = {\n      name: formData.name,\n      categoryId: formData.categoryId,\n      price: formData.price,\n      description: formData.description\n    };\n    this.productService.add(data).subscribe(response => {\n      this.dialogRef.close();\n      this.onAddProduct.emit();\n      this.responseMessage = response.message;\n      alert(\"Successfully Add Product\");\n      this.snackbarService.openSnackBar(this.responseMessage, \"success\");\n    }, error => {\n      this.dialogRef.close();\n      console.error(error);\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      alert(this.responseMessage + \" \" + GlobalConstants.error);\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n  edit() {\n    var formData = this.productForm.value;\n    var data = {\n      id: this.dialogData.data.id,\n      name: formData.name,\n      categoryId: formData.categoryId,\n      price: formData.price,\n      description: formData.description\n    };\n    this.productService.update(data).subscribe(response => {\n      this.dialogRef.close();\n      this.onEditProduct.emit();\n      this.responseMessage = response.message;\n      alert(\"Successfully Update Product\");\n      this.snackbarService.openSnackBar(this.responseMessage, \"success\");\n    }, error => {\n      this.dialogRef.close();\n      console.error(error);\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      alert(this.responseMessage + \" \" + GlobalConstants.error);\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n};\nProductComponent = __decorate([Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n}), __param(0, Inject(MAT_DIALOG_DATA))], ProductComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}